{"version":3,"sources":["components/TheHeader/index.js","components/TodoContainer/TodoInput/index.js","components/TodoContainer/TodoItem/index.js","components/TodoContainer/FilterButtons/index.js","components/TodoContainer/index.js","App.js","serviceWorker.js","index.js"],"names":["TheHeader","_ref","title","react_default","a","createElement","className","TodoInput","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","date","setState","expireDate","pressEnter","e","key","saveTodoItem","preventDefault","todo","refs","isEditing","value","validateTodo","addTodoItem","alert","state","Date","type","placeholder","ref","onKeyPress","es","selected","onchange","onClick","Component","TodoItem","toggleTodo","completed","changeTodo","newTodo","isChanging","item","checked","onChange","concat","data-toggle","data-target","startChangeTodo","deleteTodoItem","id","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","FilterTabs","showCompleted","showAll","showUncompleted","TodoContainer","list","toConsumableArray","needDelete","_ref2","filter","index","toggled","map","_ref3","newList","_ref4","_ref5","status","_ref6","_ref7","_this2","finalList","TodoInput_TodoInput","idx","components_TodoContainer_TodoItem","bind","FilterButtons_FilterTabs","App","src_components_TheHeader","src_components_TodoContainer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.63bac202.chunk.js","sourcesContent":["import React from 'react';\nimport './index.css';\n\nconst TheHeader = ({ title }) => (\n  <header className=\"TheHeader\">\n    <h1>{title}</h1>\n  </header>\n);\n\nexport default TheHeader;\n","import React, { Component } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './index.css'\n\nexport default class TodoInput extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            expireDate: new Date()\n        };\n    };\n\n    handleChange = (date) => {\n        this.setState(({expireDate}) => ({\n            expireDate: date\n        }));\n    };\n\n    pressEnter = e => {\n        if (e.key === 'Enter') {\n            this.saveTodoItem(e);\n        }\n    };\n\n    saveTodoItem = e => {\n        e.preventDefault();\n\n        const todo = this.refs.isEditing.value;\n        if (this.validateTodo(todo)) {\n            this.props.addTodoItem(todo, false);\n            this.refs.isEditing.value = '';\n        }\n    };\n\n    validateTodo = (todo) => {\n        if (todo === '') {\n            alert('请输入 Todo!');\n            return false;\n        }\n        return true;\n    };\n\n    render() {\n        return (\n            <div className=\"TodoInput\">\n                <input\n                    type=\"text\"\n                    placeholder=\"输入下一个 todo 任务\"\n                    className=\"form-control TodoInput-Input\"\n                    ref=\"isEditing\"\n                    onKeyPress={this.pressEnter}\n                />\n                <DatePicker\n                    className=\"TodoInput-Picker form-control\"\n                    selected={this.state.expireDate}\n                    onchange={this.handleChange}\n                />\n                <button\n                    className=\"btn btn-primary\"\n                    onClick={this.saveTodoItem}\n                >\n                    +\n                </button>\n            </div>\n        )\n    };\n}\n","import React, { Component } from \"react\";\nimport \"./index.css\";\n\nclass TodoItem extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            completed: props.item.completed\n        };\n    }\n\n    toggleTodo = () => {\n        this.setState(({ completed }) => ({\n            completed: !completed\n        }));\n        this.props.toggleTodo();\n    };\n\n    changeTodo = () => {\n        const newTodo = this.refs.isChanging.value;\n        if (newTodo === '') {\n            alert('请输入新 Todo!');\n        } else {\n            this.props.changeTodo(newTodo);\n            this.refs.isChanging.value = \"\";\n        }\n    };\n\n    render() {\n        return (\n            <div className=\"TodoItem\">\n                <input\n                    type=\"checkbox\"\n                    className=\"TodoItem-Checkbox\"\n                    onClick={this.toggleTodo}\n                    checked={this.props.item.completed ? true : false}\n                    onChange={()=>{}}\n                />\n                <span\n                    className={`form-control TodoItem-Span ${\n                        this.props.item.completed ? \"TodoItem-Completed\" : \"\"\n                    }`}\n                >\n                {this.props.item.todo}\n                </span>\n                <button\n                    data-toggle=\"modal\"\n                    data-target=\"#myModal\"\n                    className=\"btn btn-info\"\n                    onClick={this.props.startChangeTodo}\n                >\n                    编辑\n                </button>\n                <button\n                    className=\"TodoItem-Button btn\"\n                    onClick={this.props.deleteTodoItem}\n                >\n                    -\n                </button>\n                <div\n                    className=\"modal fade\"\n                    id=\"myModal\"\n                    tabIndex=\"-1\"\n                    role=\"dialog\"\n                    aria-labelledby=\"myModalLabel\"\n                    aria-hidden=\"true\"\n                >\n                    <div className=\"modal-dialog\">\n                        <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                                <button\n                                    type=\"button\"\n                                    className=\"close\"\n                                    data-dismiss=\"modal\"\n                                    aria-hidden=\"true\"\n                                >\n                                    &times;\n                                </button>\n                                <h4 className=\"modal-title\" id=\"myModalLabel\">\n                                    编辑 Todo 内容\n                                </h4>\n                            </div>\n                            <textarea\n                                type=\"text\"\n                                className=\"modal-body\"\n                                placeholder=\"请输入新 Todo\"\n                                ref=\"isChanging\"\n                            >\n                            </textarea>\n                            <div className=\"modal-footer\">\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-default\"\n                                    data-dismiss=\"modal\"\n                                >\n                                    取消\n                                </button>\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-primary\"\n                                    data-dismiss=\"modal\"\n                                    onClick={this.changeTodo}\n                                >\n                                    提交更改\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default TodoItem;\n","import React, { Component } from 'react';\nimport './index.css';\n\nexport default class FilterTabs extends Component {\n    render() {\n        return (\n            <div className=\"FilterButtons btn-group\">\n                <button\n                    className=\"btn btn-success\"\n                    onClick={this.props.showCompleted}\n                >\n                已完成\n                </button>\n                <button\n                    className=\"btn btn-primary\"\n                    onClick={this.props.showAll}\n                >全部\n                </button>\n                <button\n                    className=\"btn btn-warning\"\n                    onClick={this.props.showUncompleted}\n                >\n                未完成\n                </button>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport TodoInput from './TodoInput';\nimport TodoItem from './TodoItem';\nimport FilterButtons from './FilterButtons';\nimport './index.css';\n\nclass TodoContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      list: [\n        {\n          todo: '吃饭',\n          completed: false\n        },\n        {\n          todo: '睡觉',\n          completed: false\n        },\n        {\n          todo: '打豆豆',\n          completed: false\n        }\n      ],\n      status: 'all'\n    };\n  }\n\n  addTodoItem = (todo, completed) => {\n    this.setState(({ list }) => ({\n      list: [{ todo, completed }, ...list]\n    }));\n  };\n\n  deleteTodoItem = needDelete => {\n    this.setState(({ list }) => ({\n      list: list.filter((todo, index) => index !== needDelete)\n    }));\n  };\n\n  toggleTodo = toggled => {\n    // eslint-disable-next-line\n    this.state.list.map((todo, index) => {\n      if (toggled === index) todo.completed = !todo.completed;\n    });\n  };\n\n  startChangeTodo = toggled => {\n    this.setState(({ isChanging }) => ({\n      isChanging: toggled\n    }));\n  };\n\n  changeTodo = newTodo => {\n    const index = this.state.isChanging;\n    const newList = this.state.list;\n    newList[index].todo = newTodo;\n\n    this.setState(({ list }) => ({\n      list: newList\n    }));\n  };\n\n  showAll = () => {\n    this.setState(({ status }) => ({\n      status: 'all'\n    }));\n  };\n\n  showCompleted = () => {\n    this.setState(({ status }) => ({\n      status: 'completed'\n    }));\n  };\n\n  showUncompleted = () => {\n    this.setState(({ status }) => ({\n      status: 'uncompleted'\n    }));\n  };\n\n  render() {\n    const finalList = this.state.list.filter((item, index) => {\n      switch (this.state.status) {\n        case 'completed':\n          return item.completed;\n        case 'uncompleted':\n          return !item.completed;\n        default:\n          return true;\n      }\n    });\n\n    return (\n      <div className=\"TodoContainer\">\n        制定你的TodoList吧!\n        <TodoInput addTodoItem={this.addTodoItem} />\n        {finalList.map((item, idx) => (\n          <TodoItem\n            key={idx}\n            index={idx}\n            item={item}\n            deleteTodoItem={this.deleteTodoItem.bind(this, idx)}\n            toggleTodo={this.toggleTodo.bind(this, idx)}\n            startChangeTodo={this.startChangeTodo.bind(this, idx)}\n            changeTodo={this.changeTodo}\n          />\n        ))}\n        <FilterButtons\n          showAll={this.showAll}\n          showCompleted={this.showCompleted}\n          showUncompleted={this.showUncompleted}\n        />\n      </div>\n    );\n  }\n}\n\nexport default TodoContainer;\n","import React, { Component } from 'react';\nimport TheHeader from './components/TheHeader';\nimport TodoContainer from './components/TodoContainer';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <TheHeader title=\"pre-work-todolist\" />\n        <TodoContainer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}